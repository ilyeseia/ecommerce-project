
name: CI/CD E-commerce

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # 1. Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Installer Docker Compose
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # 3. Copier fichier env
      - name: Copy env
        run: cp .env.example .env

      # 4. Build containers
      - name: Build services
        run: docker compose -f docker-compose.yml build

      # 5. Lancer tests backend
      - name: Run backend tests
        run: |
          docker compose -f docker-compose.yml run --rm backend python manage.py test

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            cd /var/www/ecommerce-staging
            git pull origin main
            docker compose down
            docker compose up -d --build

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /var/www/ecommerce
            git pull origin main
            docker compose down
            docker compose up -d --build

